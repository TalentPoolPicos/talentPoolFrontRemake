.profilePage {
  display: grid;
  grid-template-columns: minmax(0, 3fr) 1.2fr;
  gap: 2rem;
  max-width: 1120px;
  margin: 2.5rem auto 4rem;
  padding: 0 1rem;
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
}

@media (max-width: 1024px) {
  .profilePage {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
}

.main {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding-top: 5.5rem;
}

@media (min-width: 900px) {
  .main {
    padding-top: 2rem;
  }
}

.card {
  background: var(--color-surface);
  border: 1px solid var(--color-outline-variant);
  border-radius: 14px;
  box-shadow: 0 2px 8px rgb(0 0 0 / 7%);
  padding: 1rem 1rem;
}

.sidebarCard {
  margin-bottom: .5rem;
}

.blockTitle,
.cardTitle {
  margin: 0 0 .5rem;
  font-size: 1rem;
  font-weight: 800;
  color: var(--color-on-surface);
}

.headerCard {
  display: flex;
  flex-direction: column;
  gap: .9rem;
  background: var(--color-surface);
  border: 1px solid var(--color-outline-variant);
  border-radius: 14px;
  padding: 1rem 1rem;
  box-shadow: 0 2px 8px rgb(0 0 0 / 7%);
}

.nameRow {
  display: flex;
  align-items: baseline;
  gap: .5rem .75rem;
  flex-wrap: wrap;
}

.title {
  margin: 0;
  font-size: 2rem;
  line-height: 1.1;
  font-weight: 800;
  color: var(--color-on-surface);
}

.usernameAt {
  font-size: 1.1rem;
  font-weight: 700;
  color: var(--color-on-surface-variant);
}

.metaRow {
  display: flex;
  align-items: center;
  gap: .6rem;
  flex-wrap: wrap;
}

.roleBadge {
  padding: .25rem .6rem;
  border-radius: 999px;
  font-size: .75rem;
  font-weight: 800;
  letter-spacing: .2px;
  border: 1px solid var(--color-border);
  background: var(--color-primary-container);
  color: var(--color-on-primary-container);
}

.about {
  line-height: 1.65;
  color: var(--color-on-surface);
  white-space: pre-wrap;
}

.tagsInline {
  display: flex;
  flex-wrap: wrap;
  gap: .5rem;
  margin-top: .25rem;
}

.tagChip {
  background: var(--color-primary-container);
  color: var(--color-on-primary-container);
  padding: 6px 12px;
  border-radius: 999px;
  font-size: .85rem;
  font-weight: 700;
  line-height: 1;
  box-shadow: 0 1px 2px rgb(0 0 0 / 10%);
}

.quickInfo {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: .75rem;
}

@media (max-width: 720px) {
  .quickInfo {
    grid-template-columns: 1fr;
  }
}

.qiItem {
  background: var(--color-surface-variant);
  border: 1px solid var(--color-outline-variant);
  border-radius: 10px;
  padding: .75rem .875rem;
  display: grid;
  gap: .35rem;
}

.qiLabel {
  font-size: .72rem;
  color: var(--color-on-surface-variant);
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: .3px;
}

.qiValue {
  font-size: .95rem;
  color: var(--color-on-surface);
  font-weight: 700;
  word-break: break-word;
  display: inline-flex;
  gap: .4rem;
  align-items: center;
}

.qiIcon {
  opacity: .8;
}

.matchIndicator {
  width: 3rem;
  height: 2rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  border: 2px solid var(--color-border);
  background: var(--color-surface);
  cursor: pointer;
  font-size: .9rem;
  padding: .3rem .6rem;
  border-radius: 20px;
  font-weight: 700;
  transition: background-color .2s ease, border-color .2s ease, transform .1s ease;
}

.matchIndicator:hover {
  border-color: var(--color-primary);
  transform: translateY(-1px);
}

.liked {
  border-color: var(--color-primary);
}

.emoji {
  font-size: 1.1rem;
  user-select: none;
  display: inline-block;
  transition: transform .3s ease, opacity .3s ease;
}

.animateIn {
  animation: pop .4s ease-in-out;
}

.animateOut {
  animation: pop .4s ease-in-out;
}

@keyframes pop {
  0% {
    transform: scale(0) rotate(90deg);
    opacity: 0;
  }

  60% {
    transform: scale(1.3);
    opacity: 1;
  }

  100% {
    transform: scale(1) rotate(0deg);
  }
}

.sidebar {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-self: start;
  position: sticky;
  top: 96px;
}

.socialLinks {
  list-style: none;
  margin: 0;
  padding: 0;
  display: grid;
  gap: .5rem;
}

.socialOnlyIcons {
  grid-template-columns: repeat(8, 1fr);
  gap: .6rem .6rem;
}

@media (max-width: 360px) {
  .socialOnlyIcons {
    grid-template-columns: repeat(6, 1fr);
  }
}

.socialCircle {
  width: 40px;
  height: 40px;
  border-radius: 999px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-on-surface);
  text-decoration: none;
  transition: transform .12s ease, box-shadow .2s ease, border-color .2s ease, background .2s ease;
}

.socialCircle:hover {
  transform: translateY(-2px);
  border-color: var(--color-border-hover);
  background: var(--color-primary-container);
  color: var(--color-on-primary-container);
}

.socialCircle svg {
  width: 18px;
  height: 18px;
}

.srOnly {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.downloadsCol {
  display: grid;
  gap: .6rem;
}

.downloadBtn {
  width: 100%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: .5rem;
  font-weight: 800;
  border-radius: 10px;
  border: 1px solid var(--color-border);
  background: linear-gradient(0deg, rgba(0, 0, 0, .06), rgba(0, 0, 0, .06)) var(--color-primary);
  color: var(--color-on-primary);
  padding: .65rem .9rem;
  cursor: pointer;
  transition: transform .12s ease, box-shadow .2s ease, filter .2s ease;
  box-shadow: 0 6px 18px rgba(0, 0, 0, .15);
}

.downloadBtn:hover {
  transform: translateY(-2px);
  filter: saturate(1.06) brightness(1.03);
}

.downloadIcon {
  width: 18px;
  height: 18px;
}

.editBtn {
  background: linear-gradient(0deg, rgba(0, 0, 0, .04), rgba(0, 0, 0, .04)) var(--color-primary);
  filter: saturate(1.03);
}

.actionButtons>.editBtn {
  width: 100%;
}

.stats {
  display: flex;
  flex-direction: column;
  gap: .75rem;
}

.statItem {
  background-color: var(--color-surface);
  box-shadow: 0 2px 6px rgb(0 0 0 / 10%);
  border: 1px solid var(--color-outline-variant);
  padding: 1rem;
  border-radius: 12px;
  text-align: center;
}

.statNumber {
  display: block;
  font-size: 1.6rem;
  font-weight: 800;
  color: var(--color-primary);
}

.statLabel {
  font-size: .88rem;
  color: var(--color-on-surface-variant);
  font-weight: 600;
}

.likesContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: .5rem;
  flex-wrap: wrap;
  max-width: 100%;
  overflow: hidden;
  padding: .25rem 0 .5rem;
}

.avatarStack {
  display: flex;
  align-items: center;
  position: relative;
  height: 36px;
}

.stackedAvatar {
  position: relative;
  margin-left: -10px;
  border-radius: 999px;
  box-shadow: 0 0 0 2px var(--color-surface);
}

.stackedAvatar:first-child {
  margin-left: 0;
}

.error {
  max-width: 640px;
  margin: 3rem auto;
  text-align: center;
  font-size: 1.05rem;
  color: var(--color-error);
}

.jobsGrid {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: .75rem;
}

@media (max-width: 800px) {
  .jobsGrid {
    grid-template-columns: 1fr;
  }
}

.jobCard {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: .6rem;
  border: 1px solid var(--color-outline-variant);
  border-radius: 14px;
  background:
    linear-gradient(180deg,
      color-mix(in srgb, var(--color-surface) 96%, transparent),
      color-mix(in srgb, var(--color-surface) 92%, transparent));
  padding: .95rem 1rem .95rem 1.15rem;
  box-shadow: 0 2px 8px rgb(0 0 0 / 7%);
  transition:
    transform .18s ease,
    box-shadow .22s ease,
    border-color .18s ease,
    background .22s ease,
    filter .18s ease;
  overflow: hidden;
  will-change: transform, box-shadow;
}

.jobCard:hover {
  transform: translateY(-2px);
  border-color: var(--color-border-hover);
  box-shadow: 0 8px 24px rgb(0 0 0 / 12%);
  filter: saturate(1.02);
}

.jobCard::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 5px;
  background:
    linear-gradient(180deg,
      color-mix(in srgb, var(--color-primary) 84%, transparent),
      color-mix(in srgb, var(--color-primary) 64%, transparent));
  border-top-left-radius: 14px;
  border-bottom-left-radius: 14px;
  box-shadow:
    0 0 0 1px color-mix(in srgb, var(--color-primary) 40%, transparent) inset,
    0 3px 10px color-mix(in srgb, var(--color-primary) 22%, transparent);
  transition: width .22s ease, box-shadow .22s ease;
  will-change: width;
}

.jobCard:hover::before,
.jobCard:focus-within::before {
  width: 7px;
  box-shadow:
    0 0 0 1px color-mix(in srgb, var(--color-primary) 52%, transparent) inset,
    0 6px 16px color-mix(in srgb, var(--color-primary) 28%, transparent);
}

.jobCardHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: .6rem .8rem;
}

.jobTitle {
  color: var(--color-on-surface);
  font-weight: 900;
  text-decoration: none;
  font-size: 1.08rem;
  line-height: 1.25;
  letter-spacing: .1px;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.jobTitle:hover {
  color: var(--color-primary);
  text-decoration: underline;
  text-underline-offset: 3px;
}

.jobMeta {
  display: flex;
  align-items: center;
  gap: .65rem .9rem;
  flex-wrap: wrap;
  color: var(--color-on-surface-variant);
  font-weight: 700;
  font-size: .9rem;
  letter-spacing: .1px;
}

.jobBadge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 1px solid var(--color-border);
  border-radius: 999px;
  padding: .22rem .6rem;
  font-size: .72rem;
  font-weight: 900;
  line-height: 1;
  color: var(--color-on-primary-container);
  background: var(--color-primary-container);
  box-shadow: 0 1px 2px rgb(0 0 0 / 10%);
}

.jobCard:focus-within {
  outline: 3px solid color-mix(in srgb, var(--color-primary) 40%, transparent);
  outline-offset: 2px;
}

@media (prefers-reduced-motion: reduce) {

  .jobCard,
  .jobCard::before,
  .jobCard:hover,
  .jobCard:focus-within::before {
    transition: none !important;
  }
}

.jobDate {
  opacity: .9;
}

.jobApps {
  opacity: .9;
}

.job_published {
  background: color-mix(in srgb, var(--color-primary) 14%, var(--color-primary-container));
}

.job_draft {
  background: color-mix(in srgb, #888 12%, var(--color-surface-variant));
}

.job_paused {
  background: color-mix(in srgb, #ff9800 14%, var(--color-surface-variant));
}

.job_closed {
  background: color-mix(in srgb, #f44336 14%, var(--color-surface-variant));
}

.job_expired {
  background: color-mix(in srgb, #9e9e9e 14%, var(--color-surface-variant));
}

.jobsEmpty {
  margin-top: .75rem;
  text-align: center;
  color: var(--color-on-surface-variant);
  font-weight: 700;
  border: 1px dashed var(--color-outline-variant);
  background: var(--color-surface);
  padding: 1rem;
  border-radius: 12px;
}

.jobsLoadMoreSentinel {
  width: 100%;
  height: 1px;
}

.jobsLoadingMore,
.jobsEndList {
  text-align: center;
  padding: .75rem .5rem .25rem;
  color: var(--color-on-surface-variant);
  font-weight: 700;
  font-size: .9rem;
}

.jobCard:has(.jobBadge.job_published)::before {
  background: linear-gradient(180deg,
      color-mix(in srgb, #29a66a 85%, transparent),
      color-mix(in srgb, #29a66a 62%, transparent));
}

.jobCard:has(.jobBadge.job_draft)::before {
  background: linear-gradient(180deg,
      color-mix(in srgb, #888 85%, transparent),
      color-mix(in srgb, #888 62%, transparent));
}

.jobCard:has(.jobBadge.job_paused)::before {
  background: linear-gradient(180deg,
      color-mix(in srgb, #ff9800 85%, transparent),
      color-mix(in srgb, #ff9800 62%, transparent));
}

.jobCard:has(.jobBadge.job_closed)::before {
  background: linear-gradient(180deg,
      color-mix(in srgb, #f44336 85%, transparent),
      color-mix(in srgb, #f44336 62%, transparent));
}

.jobCard:has(.jobBadge.job_expired)::before {
  background: linear-gradient(180deg,
      color-mix(in srgb, #9e9e9e 85%, transparent),
      color-mix(in srgb, #9e9e9e 62%, transparent));
}

.jobTitleDisabled {
  color: var(--color-on-surface-variant);
  pointer-events: none;
  cursor: default;
  text-decoration: none !important;
}

.jobCard:hover .jobTitleDisabled {
  color: var(--color-on-surface-variant);
  text-decoration: none;
}